name: "CI"
on:
  # Run only when pushing to master branch, and making PRs
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 5
      - uses: DeterminateSystems/nix-installer-action@main
      - name: Install omnix and attic-client
        run: | 
          nix profile install nixpkgs#omnix nixpkgs#attic-client
          nix --version
      - name: Attic login
        run: attic login chutney https://cache.nixos.asia ${{ secrets.ATTIC_LOGIN_TOKEN }}
      - name: Attic use
        run: attic use chutney:oss
      - name: Find successful CI run from last 5 commits
        id: check_commits
        run: |
          SUCCESSFUL_COMMIT=""
          for COMMIT in $(git log -n 5 --pretty=%H); do
            echo "Testing commit $COMMIT"
            git checkout $COMMIT
            if nix path-info $(nix eval .#default.intermediates.outPath | tr -d '"'); then
              SUCCESSFUL_COMMIT=$COMMIT
              echo "Intermediates exist for $COMMIT"
              break
            else
              echo "Intermediates do not exist for $COMMIT"
            fi
          done
          if [ -n "$SUCCESSFUL_COMMIT" ]; then
            echo "successful_commit=$SUCCESSFUL_COMMIT" >> $GITHUB_OUTPUT
          else
            echo "None of the previous 5 commits have build intermediates"
          fi
        
      - name: Build all flake outputs
        run: |
          if [ -z "${{ steps.check_commits.outputs.successful_commit }}" ]; then
            om ci
          else
            om ci run -- --override-input "flake/incremental" "git+ssh://git@github.com/juspay/haskell-incremental-build-template/?rev=$BASE_COMMIT"
          fi
      - name: Attic push
        run: attic push chutney:oss result

